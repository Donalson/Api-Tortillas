{
  "{\"sourceRoot\":\"C:\\\\Users\\\\donal\\\\Documents\\\\GitHub\\\\Api-Tortillas\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\donal\\\\Documents\\\\GitHub\\\\Api-Tortillas\",\"filename\":\"C:\\\\Users\\\\donal\\\\Documents\\\\GitHub\\\\Api-Tortillas\\\\src\\\\index.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\donal\\\\Documents\\\\GitHub\\\\Api-Tortillas\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.13": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\donal\\Documents\\GitHub\\Api-Tortillas\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\donal\\Documents\\GitHub\\Api-Tortillas",
      "filename": "C:\\Users\\donal\\Documents\\GitHub\\Api-Tortillas\\src\\index.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\donal\\Documents\\GitHub\\Api-Tortillas",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\donal\\Documents\\GitHub\\Api-Tortillas\\src\\index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\donal\\Documents\\GitHub\\Api-Tortillas\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\donal\\Documents\\GitHub\\Api-Tortillas\\src\\",
        "sourceFileName": "index.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar cors = require('cors');\n\nvar multer = require('multer');\n\nvar path = require('path');\n\nvar app = express(); //Configuracion\n\napp.set('port', process.env.PORT || 3000);\nvar storage = multer.diskStorage({\n  destination: 'Uploads',\n  filename: function filename(req, file, cb) {\n    cb(null, file.originalname);\n  }\n}); //Archivos Estaticos\n\napp.use(express[\"static\"]('Uploads')); //Middlewares\n\napp.use(express.json());\napp.use(multer({\n  storage: storage,\n  dest: 'Uploads',\n  limits: {\n    fileSize: 10000000\n  },\n  fileFilter: function fileFilter(req, file, cb) {\n    var extencionespermitidas = /jpeg|jpg|png/;\n    var mimetype = extencionespermitidas.test(file.mimetype);\n    var extencion = extencionespermitidas.test(path.extname(file.originalname));\n\n    if (mimetype && extencion) {\n      return cb(null, true);\n    }\n\n    cb(\"Archivo No Soportado\");\n  }\n}).single('Foto')); //CORS ABIERTAS \n//app.use(cors());\n//CORS RESTRINGIDAS\n\nvar permitidos = ['http://localhost:8080', 'http://192.168.1.4:8080'];\napp.use(cors({\n  origin: function origin(_origin, callback) {\n    if (!_origin) return callback(null, true);\n\n    if (permitidos.indexOf(_origin) === -1) {\n      var msg = 'Las politicas CORS para este sitio no permiten acceso para el origen especificado.';\n      return callback(new Error(msg), false);\n    }\n\n    return callback(null, true);\n  }\n})); //Rutas\n\napp.use(require('./routes/rutas')); //Inicio de Servidor\n\napp.listen(app.get('port'), function () {\n  console.log('Servidor en puerto', app.get('port'));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwiY29ycyIsIm11bHRlciIsInBhdGgiLCJhcHAiLCJzZXQiLCJwcm9jZXNzIiwiZW52IiwiUE9SVCIsInN0b3JhZ2UiLCJkaXNrU3RvcmFnZSIsImRlc3RpbmF0aW9uIiwiZmlsZW5hbWUiLCJyZXEiLCJmaWxlIiwiY2IiLCJvcmlnaW5hbG5hbWUiLCJ1c2UiLCJqc29uIiwiZGVzdCIsImxpbWl0cyIsImZpbGVTaXplIiwiZmlsZUZpbHRlciIsImV4dGVuY2lvbmVzcGVybWl0aWRhcyIsIm1pbWV0eXBlIiwidGVzdCIsImV4dGVuY2lvbiIsImV4dG5hbWUiLCJzaW5nbGUiLCJwZXJtaXRpZG9zIiwib3JpZ2luIiwiY2FsbGJhY2siLCJpbmRleE9mIiwibXNnIiwiRXJyb3IiLCJsaXN0ZW4iLCJnZXQiLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsSUFBTUMsSUFBSSxHQUFHRCxPQUFPLENBQUUsTUFBRixDQUFwQjs7QUFDQSxJQUFNRSxNQUFNLEdBQUdGLE9BQU8sQ0FBQyxRQUFELENBQXRCOztBQUNBLElBQU1HLElBQUksR0FBR0gsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsSUFBTUksR0FBRyxHQUFHTCxPQUFPLEVBQW5CLEMsQ0FFQTs7QUFDQUssR0FBRyxDQUFDQyxHQUFKLENBQVEsTUFBUixFQUFnQkMsT0FBTyxDQUFDQyxHQUFSLENBQVlDLElBQVosSUFBb0IsSUFBcEM7QUFFQSxJQUFNQyxPQUFPLEdBQUdQLE1BQU0sQ0FBQ1EsV0FBUCxDQUFtQjtBQUNqQ0MsRUFBQUEsV0FBVyxFQUFFLFNBRG9CO0FBRWpDQyxFQUFBQSxRQUFRLEVBQUUsa0JBQUNDLEdBQUQsRUFBTUMsSUFBTixFQUFZQyxFQUFaLEVBQW1CO0FBQzNCQSxJQUFBQSxFQUFFLENBQUMsSUFBRCxFQUFPRCxJQUFJLENBQUNFLFlBQVosQ0FBRjtBQUNEO0FBSmdDLENBQW5CLENBQWhCLEMsQ0FPQTs7QUFDQVosR0FBRyxDQUFDYSxHQUFKLENBQVFsQixPQUFPLFVBQVAsQ0FBZSxTQUFmLENBQVIsRSxDQUVBOztBQUNBSyxHQUFHLENBQUNhLEdBQUosQ0FBUWxCLE9BQU8sQ0FBQ21CLElBQVIsRUFBUjtBQUNBZCxHQUFHLENBQUNhLEdBQUosQ0FBUWYsTUFBTSxDQUFDO0FBQ2JPLEVBQUFBLE9BQU8sRUFBUEEsT0FEYTtBQUViVSxFQUFBQSxJQUFJLEVBQUUsU0FGTztBQUdiQyxFQUFBQSxNQUFNLEVBQUU7QUFBQ0MsSUFBQUEsUUFBUSxFQUFFO0FBQVgsR0FISztBQUliQyxFQUFBQSxVQUFVLEVBQUUsb0JBQUNULEdBQUQsRUFBTUMsSUFBTixFQUFZQyxFQUFaLEVBQW1CO0FBQzdCLFFBQU1RLHFCQUFxQixHQUFHLGNBQTlCO0FBQ0EsUUFBTUMsUUFBUSxHQUFHRCxxQkFBcUIsQ0FBQ0UsSUFBdEIsQ0FBMkJYLElBQUksQ0FBQ1UsUUFBaEMsQ0FBakI7QUFDQSxRQUFNRSxTQUFTLEdBQUdILHFCQUFxQixDQUFDRSxJQUF0QixDQUEyQnRCLElBQUksQ0FBQ3dCLE9BQUwsQ0FBYWIsSUFBSSxDQUFDRSxZQUFsQixDQUEzQixDQUFsQjs7QUFDQSxRQUFHUSxRQUFRLElBQUlFLFNBQWYsRUFBeUI7QUFDdkIsYUFBT1gsRUFBRSxDQUFDLElBQUQsRUFBTyxJQUFQLENBQVQ7QUFDRDs7QUFDREEsSUFBQUEsRUFBRSxDQUFDLHNCQUFELENBQUY7QUFDRDtBQVpZLENBQUQsQ0FBTixDQWFMYSxNQWJLLENBYUUsTUFiRixDQUFSLEUsQ0FlQTtBQUNBO0FBRUE7O0FBQ0EsSUFBSUMsVUFBVSxHQUFHLENBQUMsdUJBQUQsRUFBMEIseUJBQTFCLENBQWpCO0FBQ0F6QixHQUFHLENBQUNhLEdBQUosQ0FBUWhCLElBQUksQ0FBQztBQUNYNkIsRUFBQUEsTUFBTSxFQUFFLGdCQUFTQSxPQUFULEVBQWlCQyxRQUFqQixFQUEwQjtBQUNoQyxRQUFHLENBQUNELE9BQUosRUFBWSxPQUFPQyxRQUFRLENBQUMsSUFBRCxFQUFPLElBQVAsQ0FBZjs7QUFDWixRQUFHRixVQUFVLENBQUNHLE9BQVgsQ0FBbUJGLE9BQW5CLE1BQStCLENBQUMsQ0FBbkMsRUFBcUM7QUFDbkMsVUFBSUcsR0FBRyxHQUFHLG9GQUFWO0FBQ0EsYUFBT0YsUUFBUSxDQUFDLElBQUlHLEtBQUosQ0FBVUQsR0FBVixDQUFELEVBQWlCLEtBQWpCLENBQWY7QUFDRDs7QUFDRCxXQUFPRixRQUFRLENBQUMsSUFBRCxFQUFPLElBQVAsQ0FBZjtBQUNEO0FBUlUsQ0FBRCxDQUFaLEUsQ0FXQTs7QUFDQTNCLEdBQUcsQ0FBQ2EsR0FBSixDQUFRakIsT0FBTyxDQUFDLGdCQUFELENBQWYsRSxDQUVBOztBQUNBSSxHQUFHLENBQUMrQixNQUFKLENBQVcvQixHQUFHLENBQUNnQyxHQUFKLENBQVEsTUFBUixDQUFYLEVBQTRCLFlBQU07QUFDOUJDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLG9CQUFaLEVBQWtDbEMsR0FBRyxDQUFDZ0MsR0FBSixDQUFRLE1BQVIsQ0FBbEM7QUFDSCxDQUZEIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcZG9uYWxcXERvY3VtZW50c1xcR2l0SHViXFxBcGktVG9ydGlsbGFzXFxzcmNcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XHJcbmNvbnN0IGNvcnMgPSByZXF1aXJlICgnY29ycycpO1xyXG5jb25zdCBtdWx0ZXIgPSByZXF1aXJlKCdtdWx0ZXInKTtcclxuY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcclxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xyXG5cclxuLy9Db25maWd1cmFjaW9uXHJcbmFwcC5zZXQoJ3BvcnQnLCBwcm9jZXNzLmVudi5QT1JUIHx8IDMwMDApO1xyXG5cclxuY29uc3Qgc3RvcmFnZSA9IG11bHRlci5kaXNrU3RvcmFnZSh7XHJcbiAgZGVzdGluYXRpb246ICdVcGxvYWRzJyxcclxuICBmaWxlbmFtZTogKHJlcSwgZmlsZSwgY2IpID0+IHtcclxuICAgIGNiKG51bGwsIGZpbGUub3JpZ2luYWxuYW1lKVxyXG4gIH1cclxufSlcclxuXHJcbi8vQXJjaGl2b3MgRXN0YXRpY29zXHJcbmFwcC51c2UoZXhwcmVzcy5zdGF0aWMoJ1VwbG9hZHMnKSk7XHJcblxyXG4vL01pZGRsZXdhcmVzXHJcbmFwcC51c2UoZXhwcmVzcy5qc29uKCkpO1xyXG5hcHAudXNlKG11bHRlcih7XHJcbiAgc3RvcmFnZSxcclxuICBkZXN0OiAnVXBsb2FkcycsXHJcbiAgbGltaXRzOiB7ZmlsZVNpemU6IDEwMDAwMDAwfSxcclxuICBmaWxlRmlsdGVyOiAocmVxLCBmaWxlLCBjYikgPT4ge1xyXG4gICAgY29uc3QgZXh0ZW5jaW9uZXNwZXJtaXRpZGFzID0gL2pwZWd8anBnfHBuZy87XHJcbiAgICBjb25zdCBtaW1ldHlwZSA9IGV4dGVuY2lvbmVzcGVybWl0aWRhcy50ZXN0KGZpbGUubWltZXR5cGUpO1xyXG4gICAgY29uc3QgZXh0ZW5jaW9uID0gZXh0ZW5jaW9uZXNwZXJtaXRpZGFzLnRlc3QocGF0aC5leHRuYW1lKGZpbGUub3JpZ2luYWxuYW1lKSk7XHJcbiAgICBpZihtaW1ldHlwZSAmJiBleHRlbmNpb24pe1xyXG4gICAgICByZXR1cm4gY2IobnVsbCwgdHJ1ZSk7XHJcbiAgICB9XHJcbiAgICBjYihcIkFyY2hpdm8gTm8gU29wb3J0YWRvXCIpO1xyXG4gIH1cclxufSkuc2luZ2xlKCdGb3RvJykpO1xyXG5cclxuLy9DT1JTIEFCSUVSVEFTIFxyXG4vL2FwcC51c2UoY29ycygpKTtcclxuXHJcbi8vQ09SUyBSRVNUUklOR0lEQVNcclxudmFyIHBlcm1pdGlkb3MgPSBbJ2h0dHA6Ly9sb2NhbGhvc3Q6ODA4MCcsICdodHRwOi8vMTkyLjE2OC4xLjQ6ODA4MCddO1xyXG5hcHAudXNlKGNvcnMoe1xyXG4gIG9yaWdpbjogZnVuY3Rpb24ob3JpZ2luLCBjYWxsYmFjayl7XHJcbiAgICBpZighb3JpZ2luKSByZXR1cm4gY2FsbGJhY2sobnVsbCwgdHJ1ZSk7XHJcbiAgICBpZihwZXJtaXRpZG9zLmluZGV4T2Yob3JpZ2luKSA9PT0gLTEpe1xyXG4gICAgICB2YXIgbXNnID0gJ0xhcyBwb2xpdGljYXMgQ09SUyBwYXJhIGVzdGUgc2l0aW8gbm8gcGVybWl0ZW4gYWNjZXNvIHBhcmEgZWwgb3JpZ2VuIGVzcGVjaWZpY2Fkby4nO1xyXG4gICAgICByZXR1cm4gY2FsbGJhY2sobmV3IEVycm9yKG1zZyksIGZhbHNlKTtcclxuICAgIH1cclxuICAgIHJldHVybiBjYWxsYmFjayhudWxsLCB0cnVlKTtcclxuICB9XHJcbn0pKTtcclxuXHJcbi8vUnV0YXNcclxuYXBwLnVzZShyZXF1aXJlKCcuL3JvdXRlcy9ydXRhcycpKTtcclxuXHJcbi8vSW5pY2lvIGRlIFNlcnZpZG9yXHJcbmFwcC5saXN0ZW4oYXBwLmdldCgncG9ydCcpLCAoKSA9PiB7XHJcbiAgICBjb25zb2xlLmxvZygnU2Vydmlkb3IgZW4gcHVlcnRvJywgYXBwLmdldCgncG9ydCcpKTtcclxufSk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "express",
        "require",
        "cors",
        "multer",
        "path",
        "app",
        "set",
        "process",
        "env",
        "PORT",
        "storage",
        "diskStorage",
        "destination",
        "filename",
        "req",
        "file",
        "cb",
        "originalname",
        "use",
        "json",
        "dest",
        "limits",
        "fileSize",
        "fileFilter",
        "extencionespermitidas",
        "mimetype",
        "test",
        "extencion",
        "extname",
        "single",
        "permitidos",
        "origin",
        "callback",
        "indexOf",
        "msg",
        "Error",
        "listen",
        "get",
        "console",
        "log"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAE,MAAF,CAApB;;AACA,IAAME,MAAM,GAAGF,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMG,IAAI,GAAGH,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMI,GAAG,GAAGL,OAAO,EAAnB,C,CAEA;;AACAK,GAAG,CAACC,GAAJ,CAAQ,MAAR,EAAgBC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAApC;AAEA,IAAMC,OAAO,GAAGP,MAAM,CAACQ,WAAP,CAAmB;AACjCC,EAAAA,WAAW,EAAE,SADoB;AAEjCC,EAAAA,QAAQ,EAAE,kBAACC,GAAD,EAAMC,IAAN,EAAYC,EAAZ,EAAmB;AAC3BA,IAAAA,EAAE,CAAC,IAAD,EAAOD,IAAI,CAACE,YAAZ,CAAF;AACD;AAJgC,CAAnB,CAAhB,C,CAOA;;AACAZ,GAAG,CAACa,GAAJ,CAAQlB,OAAO,UAAP,CAAe,SAAf,CAAR,E,CAEA;;AACAK,GAAG,CAACa,GAAJ,CAAQlB,OAAO,CAACmB,IAAR,EAAR;AACAd,GAAG,CAACa,GAAJ,CAAQf,MAAM,CAAC;AACbO,EAAAA,OAAO,EAAPA,OADa;AAEbU,EAAAA,IAAI,EAAE,SAFO;AAGbC,EAAAA,MAAM,EAAE;AAACC,IAAAA,QAAQ,EAAE;AAAX,GAHK;AAIbC,EAAAA,UAAU,EAAE,oBAACT,GAAD,EAAMC,IAAN,EAAYC,EAAZ,EAAmB;AAC7B,QAAMQ,qBAAqB,GAAG,cAA9B;AACA,QAAMC,QAAQ,GAAGD,qBAAqB,CAACE,IAAtB,CAA2BX,IAAI,CAACU,QAAhC,CAAjB;AACA,QAAME,SAAS,GAAGH,qBAAqB,CAACE,IAAtB,CAA2BtB,IAAI,CAACwB,OAAL,CAAab,IAAI,CAACE,YAAlB,CAA3B,CAAlB;;AACA,QAAGQ,QAAQ,IAAIE,SAAf,EAAyB;AACvB,aAAOX,EAAE,CAAC,IAAD,EAAO,IAAP,CAAT;AACD;;AACDA,IAAAA,EAAE,CAAC,sBAAD,CAAF;AACD;AAZY,CAAD,CAAN,CAaLa,MAbK,CAaE,MAbF,CAAR,E,CAeA;AACA;AAEA;;AACA,IAAIC,UAAU,GAAG,CAAC,uBAAD,EAA0B,yBAA1B,CAAjB;AACAzB,GAAG,CAACa,GAAJ,CAAQhB,IAAI,CAAC;AACX6B,EAAAA,MAAM,EAAE,gBAASA,OAAT,EAAiBC,QAAjB,EAA0B;AAChC,QAAG,CAACD,OAAJ,EAAY,OAAOC,QAAQ,CAAC,IAAD,EAAO,IAAP,CAAf;;AACZ,QAAGF,UAAU,CAACG,OAAX,CAAmBF,OAAnB,MAA+B,CAAC,CAAnC,EAAqC;AACnC,UAAIG,GAAG,GAAG,oFAAV;AACA,aAAOF,QAAQ,CAAC,IAAIG,KAAJ,CAAUD,GAAV,CAAD,EAAiB,KAAjB,CAAf;AACD;;AACD,WAAOF,QAAQ,CAAC,IAAD,EAAO,IAAP,CAAf;AACD;AARU,CAAD,CAAZ,E,CAWA;;AACA3B,GAAG,CAACa,GAAJ,CAAQjB,OAAO,CAAC,gBAAD,CAAf,E,CAEA;;AACAI,GAAG,CAAC+B,MAAJ,CAAW/B,GAAG,CAACgC,GAAJ,CAAQ,MAAR,CAAX,EAA4B,YAAM;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkClC,GAAG,CAACgC,GAAJ,CAAQ,MAAR,CAAlC;AACH,CAFD",
      "sourceRoot": "C:\\Users\\donal\\Documents\\GitHub\\Api-Tortillas\\src\\",
      "sourcesContent": [
        "const express = require('express');\r\nconst cors = require ('cors');\r\nconst multer = require('multer');\r\nconst path = require('path');\r\nconst app = express();\r\n\r\n//Configuracion\r\napp.set('port', process.env.PORT || 3000);\r\n\r\nconst storage = multer.diskStorage({\r\n  destination: 'Uploads',\r\n  filename: (req, file, cb) => {\r\n    cb(null, file.originalname)\r\n  }\r\n})\r\n\r\n//Archivos Estaticos\r\napp.use(express.static('Uploads'));\r\n\r\n//Middlewares\r\napp.use(express.json());\r\napp.use(multer({\r\n  storage,\r\n  dest: 'Uploads',\r\n  limits: {fileSize: 10000000},\r\n  fileFilter: (req, file, cb) => {\r\n    const extencionespermitidas = /jpeg|jpg|png/;\r\n    const mimetype = extencionespermitidas.test(file.mimetype);\r\n    const extencion = extencionespermitidas.test(path.extname(file.originalname));\r\n    if(mimetype && extencion){\r\n      return cb(null, true);\r\n    }\r\n    cb(\"Archivo No Soportado\");\r\n  }\r\n}).single('Foto'));\r\n\r\n//CORS ABIERTAS \r\n//app.use(cors());\r\n\r\n//CORS RESTRINGIDAS\r\nvar permitidos = ['http://localhost:8080', 'http://192.168.1.4:8080'];\r\napp.use(cors({\r\n  origin: function(origin, callback){\r\n    if(!origin) return callback(null, true);\r\n    if(permitidos.indexOf(origin) === -1){\r\n      var msg = 'Las politicas CORS para este sitio no permiten acceso para el origen especificado.';\r\n      return callback(new Error(msg), false);\r\n    }\r\n    return callback(null, true);\r\n  }\r\n}));\r\n\r\n//Rutas\r\napp.use(require('./routes/rutas'));\r\n\r\n//Inicio de Servidor\r\napp.listen(app.get('port'), () => {\r\n    console.log('Servidor en puerto', app.get('port'));\r\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1614573513354
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\donal\\\\Documents\\\\GitHub\\\\Api-Tortillas\\\\src\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\donal\\\\Documents\\\\GitHub\\\\Api-Tortillas\",\"filename\":\"C:\\\\Users\\\\donal\\\\Documents\\\\GitHub\\\\Api-Tortillas\\\\src\\\\routes\\\\rutas.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\donal\\\\Documents\\\\GitHub\\\\Api-Tortillas\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.13": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\donal\\Documents\\GitHub\\Api-Tortillas\\src\\routes\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\donal\\Documents\\GitHub\\Api-Tortillas",
      "filename": "C:\\Users\\donal\\Documents\\GitHub\\Api-Tortillas\\src\\routes\\rutas.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\donal\\Documents\\GitHub\\Api-Tortillas",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\donal\\Documents\\GitHub\\Api-Tortillas\\src\\routes\\rutas.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\donal\\Documents\\GitHub\\Api-Tortillas\\src\\routes\\rutas.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\donal\\Documents\\GitHub\\Api-Tortillas\\src\\routes\\",
        "sourceFileName": "rutas.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar express = require('express'); //Llamado de express\n\n\nvar router = express.Router(); //Se llamo a la funcion de router de express\n\nvar fs = require('fs').promises; //Importamos la funciona para eliminar la foto antigua\n\n\nvar conexion = require('../database'); //Se mando a llamar a la conexion de base de datos\n//OTRAS RUTAS ----------------------------------------------------------------------------------------------------------------------------------------------\n//Ruta de Bienvenida de la APi\n\n\nrouter.get('/', /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            res.send('Bienvenido a la API del proyecto tortillas de harina');\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}()); //Ruta para subir fotos\n\nrouter.post('/SubirFoto', function (req, res) {\n  //console.log(req.file)\n  res.json({\n    mensaje: 'Imagen Subida'\n  });\n}); //Ruta para borrar fotos\n\nrouter.post('/BorrarFoto', function (req, res) {\n  var FotoVieja = req.body.FotoVieja;\n  fs.unlink('./Uploads/' + FotoVieja).then(function () {\n    res.json({\n      mensaje: 'Imagen Eliminada'\n    });\n  })[\"catch\"](function (err) {\n    console.error('Algo Salio Mal Removiendo La Foto: ', err);\n  });\n}); //RUTAS DE LLAMADO GENERAL ----------------------------------------------------------------------------------------------------------------------------------------------\n//Ruta de llamado de Clientes\n\nrouter.get('/Clientes', /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            conexion.query('SELECT * FROM clientes WHERE Activo = 1 ORDER BY Nombres', function (err, rows, fields) {\n              if (!err) {\n                res.json(rows);\n              } else {\n                console.log(err);\n              }\n            });\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}()); //Ruta de llamado de Tortillas\n\nrouter.get('/Tortillas', /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            conexion.query('SELECT * FROM tortillas WHERE Activa = 1', function (err, rows, fields) {\n              if (!err) {\n                res.json(rows);\n              } else {\n                console.log(err);\n              }\n            });\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}()); //Ruta de llamado de Pedidos\n\nrouter.get('/Pedidos', /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            conexion.query('SELECT p.IdPedido, p.Fecha, p.Cliente, C.Nombres, C.Apellidos, p.Tortilla, t.Descripcion, p.Cantidad FROM pedidos AS p INNER JOIN clientes AS c ON p.Cliente = c.IdCliente INNER JOIN tortillas as T ON p.Tortilla = t.IdTortilla WHERE p.Fecha = CURRENT_DATE  ORDER BY c.Nombres, C.Apellidos, p.Tortilla', function (err, rows, fields) {\n              if (!err) {\n                res.json(rows);\n              } else {\n                console.log(err);\n              }\n            });\n\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function (_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}()); //Ruta de llamado de Ventas\n\nrouter.get('/Ventas', /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            conexion.query('SELECT IdVenta, Fecha, c.Nombres, c.Apellidos, c.Direccion, c.Nit, SubTotal, Total, Pago, Cambio FROM ventas AS v INNER JOIN clientes AS c ON v.Cliente = c.IdCliente ORDER BY c.Nombres,c.Apellidos', function (err, rows, fields) {\n              if (!err) {\n                res.json(rows);\n              } else {\n                console.log(err);\n              }\n            });\n\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function (_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}()); //Ruta de llamado de Pedidos sin Registrar en Ventas\n\nrouter.get('/PedidosARegistrar', /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res) {\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            conexion.query('SELECT p.IdPedido, p.Fecha, p.Cliente, C.Nombres, C.Apellidos, p.Tortilla, t.Descripcion, p.Cantidad, RVenta FROM pedidos AS p INNER JOIN clientes AS c ON p.Cliente = c.IdCliente INNER JOIN tortillas as T ON p.Tortilla = t.IdTortilla WHERE RVenta = 0  ORDER BY p.Fecha DESC, c.Nombres, C.Apellidos, p.Tortilla', function (err, rows, fields) {\n              if (!err) {\n                res.json(rows);\n              } else {\n                console.log(err);\n              }\n            });\n\n          case 1:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function (_x11, _x12) {\n    return _ref6.apply(this, arguments);\n  };\n}()); //RUTAS DE LLAMADO POR ID ----------------------------------------------------------------------------------------------------------------------------------------------\n//Ruta de llamado de Clientes por id\n\nrouter.get('/Clientes/:id', /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(req, res) {\n    var id;\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            id = req.params.id;\n            conexion.query('SELECT * FROM clientes WHERE IdCliente = ?', [id], function (err, rows, fields) {\n              if (!err) {\n                res.json(rows[0]);\n              } else {\n                console.log(err);\n              }\n            });\n\n          case 2:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n\n  return function (_x13, _x14) {\n    return _ref7.apply(this, arguments);\n  };\n}()); //Ruta de llamado de Tortillas por id\n\nrouter.get('/Tortillas/:id', /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(req, res) {\n    var id;\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            id = req.params.id;\n            conexion.query('SELECT * FROM tortillas WHERE IdTortilla = ?', [id], function (err, rows, fields) {\n              if (!err) {\n                res.json(rows);\n              } else {\n                console.log(err);\n              }\n            });\n\n          case 2:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n\n  return function (_x15, _x16) {\n    return _ref8.apply(this, arguments);\n  };\n}()); //Ruta de llamado de Pedido por fecha especifica\n\nrouter.get('/Pedidos/:fecha', /*#__PURE__*/function () {\n  var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(req, res) {\n    var fecha;\n    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            fecha = req.params.fecha;\n            conexion.query('SELECT p.IdPedido, p.Fecha, p.Cliente, C.Nombres, C.Apellidos, p.Tortilla, t.Descripcion, p.Cantidad FROM pedidos AS p INNER JOIN clientes AS c ON p.Cliente = c.IdCliente INNER JOIN tortillas as T ON p.Tortilla = t.IdTortilla WHERE p.Fecha = ?  ORDER BY c.Nombres, C.Apellidos, p.Tortilla', [fecha], function (err, rows, fields) {\n              if (!err) {\n                res.json(rows);\n              } else {\n                console.log(err);\n              }\n            });\n\n          case 2:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n\n  return function (_x17, _x18) {\n    return _ref9.apply(this, arguments);\n  };\n}()); //Ruta de llamado de Ventas por Fecha\n\nrouter.get('/Ventas/:fecha', /*#__PURE__*/function () {\n  var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(req, res) {\n    var fecha;\n    return regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            fecha = req.params.fecha;\n            conexion.query('SELECT IdVenta, Fecha, c.Nombres, c.Apellidos, c.Direccion, c.Nit, SubTotal, Total, Pago, Cambio FROM ventas AS v INNER JOIN clientes AS c ON v.Cliente = c.IdCliente WHERE Fecha = ? ORDER BY c.Nombres, C.Apellidos', [fecha], function (err, rows, fields) {\n              if (!err) {\n                res.json(rows);\n              } else {\n                console.log(err);\n              }\n            });\n\n          case 2:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10);\n  }));\n\n  return function (_x19, _x20) {\n    return _ref10.apply(this, arguments);\n  };\n}()); //Ruta de llamado de Ventas por Cliente\n\nrouter.get('/VentasDe/:Cliente', /*#__PURE__*/function () {\n  var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(req, res) {\n    var Cliente;\n    return regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            Cliente = req.params.Cliente;\n            conexion.query('SELECT IdVenta, Fecha, c.Nombres, c.Apellidos, c.Direccion, c.Nit, SubTotal, Total, Pago, Cambio FROM ventas AS v INNER JOIN clientes AS c ON v.Cliente = c.IdCliente WHERE v.Cliente = ? ORDER BY v.Fecha', [Cliente], function (err, rows, fields) {\n              if (!err) {\n                res.json(rows);\n              } else {\n                console.log(err);\n              }\n            });\n\n          case 2:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11);\n  }));\n\n  return function (_x21, _x22) {\n    return _ref11.apply(this, arguments);\n  };\n}()); //Ruta de llamado de Detalle por Factura\n\nrouter.get('/DetallesVentas/:factura', /*#__PURE__*/function () {\n  var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(req, res) {\n    var factura;\n    return regeneratorRuntime.wrap(function _callee12$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            factura = req.params.factura;\n            conexion.query('SELECT * FROM detalleventa WHERE Factura = ?', [factura], function (err, rows, fields) {\n              if (!err) {\n                res.json(rows);\n              } else {\n                console.log(err);\n              }\n            });\n\n          case 2:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, _callee12);\n  }));\n\n  return function (_x23, _x24) {\n    return _ref12.apply(this, arguments);\n  };\n}()); //Ruta de llamado de Pedidos sin Registrar en Ventas\n\nrouter.get('/PedidosARegistrar/:Fecha', /*#__PURE__*/function () {\n  var _ref13 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(req, res) {\n    var Fecha;\n    return regeneratorRuntime.wrap(function _callee13$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            Fecha = req.params.Fecha;\n            conexion.query('SELECT p.IdPedido, p.Fecha, p.Cliente, C.Nombres, C.Apellidos, p.Tortilla, t.Descripcion, p.Cantidad, RVenta FROM pedidos AS p INNER JOIN clientes AS c ON p.Cliente = c.IdCliente INNER JOIN tortillas as T ON p.Tortilla = t.IdTortilla WHERE RVenta = 0 AND p.Fecha = ?  ORDER BY c.Nombres, C.Apellidos, p.Tortilla', [Fecha], function (err, rows, fields) {\n              if (!err) {\n                res.json(rows);\n              } else {\n                console.log(err);\n              }\n            });\n\n          case 2:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, _callee13);\n  }));\n\n  return function (_x25, _x26) {\n    return _ref13.apply(this, arguments);\n  };\n}()); //RUTAS DE CREACION GENERAL ----------------------------------------------------------------------------------------------------------------------------------------------\n//Ruta de Creacion de Clientes\n\nrouter.post('/Clientes', /*#__PURE__*/function () {\n  var _ref14 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(req, res) {\n    var _req$body, Nombres, Apellidos, Direccion, Telefono, Nit, Adelanto, Debe, Observacion, Foto, SetenciaSQL;\n\n    return regeneratorRuntime.wrap(function _callee14$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            _req$body = req.body, Nombres = _req$body.Nombres, Apellidos = _req$body.Apellidos, Direccion = _req$body.Direccion, Telefono = _req$body.Telefono, Nit = _req$body.Nit, Adelanto = _req$body.Adelanto, Debe = _req$body.Debe, Observacion = _req$body.Observacion, Foto = _req$body.Foto;\n            SetenciaSQL = 'INSERT INTO `clientes` (`IdCliente`, `Nombres`, `Apellidos`, `Direccion`, `Telefono`, `Nit`, `Adelanto`, `Debe`, `Observacion`, `Foto`, `FC`, `FE`, `Activo`) VALUES (NULL, ?, ?, ?, ?, ?, ?, ?, ?, ?, current_timestamp(), NULL, 1)';\n            conexion.query(SetenciaSQL, [Nombres, Apellidos, Direccion, Telefono, Nit, Adelanto, Debe, Observacion, Foto], function (err, rows, fields) {\n              if (!err) {\n                res.json({\n                  Status: 'Cliente Registrado'\n                });\n              } else {\n                console.log(err);\n              }\n            });\n\n          case 3:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    }, _callee14);\n  }));\n\n  return function (_x27, _x28) {\n    return _ref14.apply(this, arguments);\n  };\n}()); //Ruta de Creacion de Tortilla\n\nrouter.post('/Tortillas', /*#__PURE__*/function () {\n  var _ref15 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15(req, res) {\n    var _req$body2, Descripcion, Precio, Foto, SetenciaSQL;\n\n    return regeneratorRuntime.wrap(function _callee15$(_context15) {\n      while (1) {\n        switch (_context15.prev = _context15.next) {\n          case 0:\n            _req$body2 = req.body, Descripcion = _req$body2.Descripcion, Precio = _req$body2.Precio, Foto = _req$body2.Foto;\n            SetenciaSQL = 'INSERT INTO `tortillas` (`IdTortilla`, `Descripcion`, `Precio`, `Foto`, `FC`, `FE`, `Activa`) VALUES (NULL, ?, ?, ?, current_timestamp(), NULL, 1)';\n            conexion.query(SetenciaSQL, [Descripcion, Precio, Foto], function (err, rows, fields) {\n              if (!err) {\n                res.json({\n                  Status: 'Tortilla Registrada'\n                });\n              } else {\n                console.log(err);\n              }\n            });\n\n          case 3:\n          case \"end\":\n            return _context15.stop();\n        }\n      }\n    }, _callee15);\n  }));\n\n  return function (_x29, _x30) {\n    return _ref15.apply(this, arguments);\n  };\n}()); //Ruta de Creacion de Pedidos\n\nrouter.post('/Pedidos', /*#__PURE__*/function () {\n  var _ref16 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16(req, res) {\n    var _req$body3, Fecha, Cliente, Tortilla, Cantidad, SetenciaSQL;\n\n    return regeneratorRuntime.wrap(function _callee16$(_context16) {\n      while (1) {\n        switch (_context16.prev = _context16.next) {\n          case 0:\n            _req$body3 = req.body, Fecha = _req$body3.Fecha, Cliente = _req$body3.Cliente, Tortilla = _req$body3.Tortilla, Cantidad = _req$body3.Cantidad;\n            SetenciaSQL = 'INSERT INTO `pedidos` (`IdPedido`, `Fecha`, `Cliente`, `Tortilla`, `Cantidad`, `RVenta`) VALUES (NULL, ?, ?, ?, ?, 0)';\n            conexion.query(SetenciaSQL, [Fecha, Cliente, Tortilla, Cantidad], function (err, rows, fields) {\n              if (!err) {\n                res.json({\n                  Status: 'Pedido Registrado'\n                });\n              } else {\n                console.log(err);\n              }\n            });\n\n          case 3:\n          case \"end\":\n            return _context16.stop();\n        }\n      }\n    }, _callee16);\n  }));\n\n  return function (_x31, _x32) {\n    return _ref16.apply(this, arguments);\n  };\n}()); //Ruta de Creacion de Ventas\n\nrouter.post('/Ventas', /*#__PURE__*/function () {\n  var _ref17 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17(req, res) {\n    var _req$body4, Cliente, SubTotal, Total, Pago, Cambio, SetenciaSQL;\n\n    return regeneratorRuntime.wrap(function _callee17$(_context17) {\n      while (1) {\n        switch (_context17.prev = _context17.next) {\n          case 0:\n            _req$body4 = req.body, Cliente = _req$body4.Cliente, SubTotal = _req$body4.SubTotal, Total = _req$body4.Total, Pago = _req$body4.Pago, Cambio = _req$body4.Cambio;\n            SetenciaSQL = 'INSERT INTO Ventas (`IdVenta`, `Fecha`, `Cliente`, `SubTotal`, `Total`, `Pago`, `Cambio`) VALUES (NULL, CURRENT_DATE(), ?, ?, ?, ?, ?)';\n            conexion.query(SetenciaSQL, [Cliente, SubTotal, Total, Pago, Cambio], function (err, rows, fields) {\n              if (!err) {\n                res.json({\n                  Status: 'Venta Registrada'\n                });\n              } else {\n                console.log(err);\n              }\n            });\n\n          case 3:\n          case \"end\":\n            return _context17.stop();\n        }\n      }\n    }, _callee17);\n  }));\n\n  return function (_x33, _x34) {\n    return _ref17.apply(this, arguments);\n  };\n}()); //Ruta de Creacion de Detalles\n\nrouter.post('/DetallesVentas', /*#__PURE__*/function () {\n  var _ref18 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18(req, res) {\n    var _req$body5, Factura, Descripcion, Cantidad, Precio, Total, SetenciaSQL;\n\n    return regeneratorRuntime.wrap(function _callee18$(_context18) {\n      while (1) {\n        switch (_context18.prev = _context18.next) {\n          case 0:\n            _req$body5 = req.body, Factura = _req$body5.Factura, Descripcion = _req$body5.Descripcion, Cantidad = _req$body5.Cantidad, Precio = _req$body5.Precio, Total = _req$body5.Total;\n            SetenciaSQL = 'INSERT INTO `detalleventa` (`IdDetalle`, `Factura`, `Descripcion`, `Cantidad`, `Precio`, `Total`) VALUES (NULL, ?, ?, ?, ?, ?)';\n            conexion.query(SetenciaSQL, [Factura, Descripcion, Cantidad, Precio, Total], function (err, rows, fields) {\n              if (!err) {\n                res.json({\n                  Status: 'Detalle Registrado'\n                });\n              } else {\n                console.log(err);\n              }\n            });\n\n          case 3:\n          case \"end\":\n            return _context18.stop();\n        }\n      }\n    }, _callee18);\n  }));\n\n  return function (_x35, _x36) {\n    return _ref18.apply(this, arguments);\n  };\n}()); //RUTAS DE ACTUALIZACION GENERAL ----------------------------------------------------------------------------------------------------------------------------------------------\n//Ruta de Acutalizacion de Clientes\n\nrouter.put('/Clientes/:id', /*#__PURE__*/function () {\n  var _ref19 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19(req, res) {\n    var _req$body6, Nombres, Apellidos, Direccion, Telefono, Nit, Adelanto, Debe, Observacion, Foto, Activo, id, SetenciaSQL;\n\n    return regeneratorRuntime.wrap(function _callee19$(_context19) {\n      while (1) {\n        switch (_context19.prev = _context19.next) {\n          case 0:\n            _req$body6 = req.body, Nombres = _req$body6.Nombres, Apellidos = _req$body6.Apellidos, Direccion = _req$body6.Direccion, Telefono = _req$body6.Telefono, Nit = _req$body6.Nit, Adelanto = _req$body6.Adelanto, Debe = _req$body6.Debe, Observacion = _req$body6.Observacion, Foto = _req$body6.Foto, Activo = _req$body6.Activo;\n            id = req.params.id;\n            SetenciaSQL = 'UPDATE `clientes` SET `Nombres` = ?, `Apellidos` = ?, `Direccion` = ?, `Telefono` = ?, `Nit` = ?, `Adelanto` = ?, `Debe` = ?, `Observacion` = ?, `Foto` = ?, `FE` = CURRENT_TIMESTAMP(), `Activo` = ? WHERE `IdCliente` = ?';\n            conexion.query(SetenciaSQL, [Nombres, Apellidos, Direccion, Telefono, Nit, Adelanto, Debe, Observacion, Foto, Activo, id], function (err, rows, fields) {\n              if (!err) {\n                res.json({\n                  Status: \"Cliente Acutalizado\"\n                });\n              } else {\n                console.log(err);\n              }\n            });\n\n          case 4:\n          case \"end\":\n            return _context19.stop();\n        }\n      }\n    }, _callee19);\n  }));\n\n  return function (_x37, _x38) {\n    return _ref19.apply(this, arguments);\n  };\n}()); //Ruta de Acutalizacion de Tortillas\n\nrouter.put('/Tortillas/:id', /*#__PURE__*/function () {\n  var _ref20 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee20(req, res) {\n    var _req$body7, Descripcion, Precio, Foto, Activo, id, SetenciaSQL;\n\n    return regeneratorRuntime.wrap(function _callee20$(_context20) {\n      while (1) {\n        switch (_context20.prev = _context20.next) {\n          case 0:\n            _req$body7 = req.body, Descripcion = _req$body7.Descripcion, Precio = _req$body7.Precio, Foto = _req$body7.Foto, Activo = _req$body7.Activo;\n            id = req.params.id;\n            SetenciaSQL = 'UPDATE `tortillas` SET `Descripcion` = ?, `Precio` = ?, `Foto` = ?, `FE` = CURRENT_TIMESTAMP(), `Activa` = ? WHERE `IdTortilla` = ?';\n            conexion.query(SetenciaSQL, [Descripcion, Precio, Foto, Activo, id], function (err, rows, fields) {\n              if (!err) {\n                res.json({\n                  Status: \"Tortilla Acutalizada\"\n                });\n              } else {\n                console.log(err);\n              }\n            });\n\n          case 4:\n          case \"end\":\n            return _context20.stop();\n        }\n      }\n    }, _callee20);\n  }));\n\n  return function (_x39, _x40) {\n    return _ref20.apply(this, arguments);\n  };\n}()); //Ruta de Acutalizacion de Pedido\n\nrouter.put('/Pedidos', /*#__PURE__*/function () {\n  var _ref21 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee21(req, res) {\n    var _req$body8, Cantidad, Fecha, Cliente, Tortilla, SetenciaSQL;\n\n    return regeneratorRuntime.wrap(function _callee21$(_context21) {\n      while (1) {\n        switch (_context21.prev = _context21.next) {\n          case 0:\n            _req$body8 = req.body, Cantidad = _req$body8.Cantidad, Fecha = _req$body8.Fecha, Cliente = _req$body8.Cliente, Tortilla = _req$body8.Tortilla;\n            SetenciaSQL = 'UPDATE pedidos SET Cantidad = ? WHERE Fecha = ? AND Cliente = ? AND Tortilla = ?';\n            conexion.query(SetenciaSQL, [Cantidad, Fecha, Cliente, Tortilla], function (err, rows, fields) {\n              if (!err) {\n                res.json({\n                  Status: \"Pedido Acutalizado\"\n                });\n              } else {\n                console.log(err);\n              }\n            });\n\n          case 3:\n          case \"end\":\n            return _context21.stop();\n        }\n      }\n    }, _callee21);\n  }));\n\n  return function (_x41, _x42) {\n    return _ref21.apply(this, arguments);\n  };\n}()); //Ruta de Acutalizacion de RVenta de Pedidos\n\nrouter.put('/PedidosRVenta', /*#__PURE__*/function () {\n  var _ref22 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee22(req, res) {\n    var _req$body9, Fecha, Cliente, SetenciaSQL;\n\n    return regeneratorRuntime.wrap(function _callee22$(_context22) {\n      while (1) {\n        switch (_context22.prev = _context22.next) {\n          case 0:\n            _req$body9 = req.body, Fecha = _req$body9.Fecha, Cliente = _req$body9.Cliente;\n            SetenciaSQL = 'UPDATE pedidos SET RVenta = 1 WHERE Fecha = ? AND Cliente = ?';\n            conexion.query(SetenciaSQL, [Fecha, Cliente], function (err, rows, fields) {\n              if (!err) {\n                res.json({\n                  Status: \"Pedido Acutalizado\"\n                });\n              } else {\n                console.log(err);\n              }\n            });\n\n          case 3:\n          case \"end\":\n            return _context22.stop();\n        }\n      }\n    }, _callee22);\n  }));\n\n  return function (_x43, _x44) {\n    return _ref22.apply(this, arguments);\n  };\n}()); //RUTAS DE ELIMINACION ----------------------------------------------------------------------------------------------------------------------------------------------\n//Ruta de Borrado de Clientes\n\nrouter[\"delete\"]('/Clientes/:id', /*#__PURE__*/function () {\n  var _ref23 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee23(req, res) {\n    var id;\n    return regeneratorRuntime.wrap(function _callee23$(_context23) {\n      while (1) {\n        switch (_context23.prev = _context23.next) {\n          case 0:\n            id = req.params.id;\n            conexion.query('UPDATE `clientes` SET `Activo` = 0 WHERE `IdCliente` = ?', [id], function (err, rows, fields) {\n              if (!err) {\n                res.json({\n                  Status: \"Cliente marcado como inactivo\"\n                });\n              } else {\n                console.log(err);\n              }\n            });\n\n          case 2:\n          case \"end\":\n            return _context23.stop();\n        }\n      }\n    }, _callee23);\n  }));\n\n  return function (_x45, _x46) {\n    return _ref23.apply(this, arguments);\n  };\n}()); //Ruta de Borrado de Tortillas\n\nrouter[\"delete\"]('/Tortillas/:id', /*#__PURE__*/function () {\n  var _ref24 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee24(req, res) {\n    var id;\n    return regeneratorRuntime.wrap(function _callee24$(_context24) {\n      while (1) {\n        switch (_context24.prev = _context24.next) {\n          case 0:\n            id = req.params.id;\n            conexion.query('UPDATE `tortillas` SET `Activa` = 0 WHERE `IdTortilla` = ?', [id], function (err, rows, fields) {\n              if (!err) {\n                res.json({\n                  Status: \"Tortilla marcada como inactiva\"\n                });\n              } else {\n                console.log(err);\n              }\n            });\n\n          case 2:\n          case \"end\":\n            return _context24.stop();\n        }\n      }\n    }, _callee24);\n  }));\n\n  return function (_x47, _x48) {\n    return _ref24.apply(this, arguments);\n  };\n}()); //Ruta de Borrado de Pedidos\n\nrouter[\"delete\"]('/Pedidos', /*#__PURE__*/function () {\n  var _ref25 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee25(req, res) {\n    var _req$body10, Cliente, Fecha;\n\n    return regeneratorRuntime.wrap(function _callee25$(_context25) {\n      while (1) {\n        switch (_context25.prev = _context25.next) {\n          case 0:\n            _req$body10 = req.body, Cliente = _req$body10.Cliente, Fecha = _req$body10.Fecha;\n            conexion.query('DELETE FROM pedidos WHERE Cliente = ? AND Fecha = ?', [Cliente, Fecha], function (err, rows, fields) {\n              if (!err) {\n                res.json({\n                  Status: \"Pedido borrado\"\n                });\n              } else {\n                console.log(err);\n              }\n            });\n\n          case 2:\n          case \"end\":\n            return _context25.stop();\n        }\n      }\n    }, _callee25);\n  }));\n\n  return function (_x49, _x50) {\n    return _ref25.apply(this, arguments);\n  };\n}());\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "rutas.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "fs",
        "promises",
        "conexion",
        "get",
        "req",
        "res",
        "send",
        "post",
        "json",
        "mensaje",
        "FotoVieja",
        "body",
        "unlink",
        "then",
        "err",
        "console",
        "error",
        "query",
        "rows",
        "fields",
        "log",
        "id",
        "params",
        "fecha",
        "Cliente",
        "factura",
        "Fecha",
        "Nombres",
        "Apellidos",
        "Direccion",
        "Telefono",
        "Nit",
        "Adelanto",
        "Debe",
        "Observacion",
        "Foto",
        "SetenciaSQL",
        "Status",
        "Descripcion",
        "Precio",
        "Tortilla",
        "Cantidad",
        "SubTotal",
        "Total",
        "Pago",
        "Cambio",
        "Factura",
        "put",
        "Activo",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\donal\\Documents\\GitHub\\Api-Tortillas\\src\\routes\\",
      "sourcesContent": [
        "const express = require('express');//Llamado de express\r\nconst router = express.Router();//Se llamo a la funcion de router de express\r\nconst fs = require('fs').promises;//Importamos la funciona para eliminar la foto antigua\r\n\r\nconst conexion = require('../database')//Se mando a llamar a la conexion de base de datos\r\n//OTRAS RUTAS ----------------------------------------------------------------------------------------------------------------------------------------------\r\n//Ruta de Bienvenida de la APi\r\nrouter.get('/', async (req, res) => {\r\n    res.send('Bienvenido a la API del proyecto tortillas de harina')\r\n})\r\n\r\n//Ruta para subir fotos\r\nrouter.post('/SubirFoto', (req, res) => {\r\n    //console.log(req.file)\r\n    res.json({mensaje: 'Imagen Subida'})\r\n})\r\n\r\n//Ruta para borrar fotos\r\nrouter.post('/BorrarFoto', (req, res) => {\r\n    const { FotoVieja } = req.body;\r\n\r\n    fs.unlink('./Uploads/' + FotoVieja).then(() => {\r\n        res.json({mensaje: 'Imagen Eliminada'})\r\n    }).catch(err => {\r\n        console.error('Algo Salio Mal Removiendo La Foto: ', err)\r\n    })\r\n})\r\n\r\n//RUTAS DE LLAMADO GENERAL ----------------------------------------------------------------------------------------------------------------------------------------------\r\n//Ruta de llamado de Clientes\r\nrouter.get('/Clientes', async (req, res) => {\r\n    conexion.query('SELECT * FROM clientes WHERE Activo = 1 ORDER BY Nombres', (err, rows, fields) => {\r\n        if(!err){\r\n            res.json(rows);\r\n        }else{\r\n            console.log(err);\r\n        }\r\n    });\r\n});\r\n\r\n//Ruta de llamado de Tortillas\r\nrouter.get('/Tortillas', async (req, res) => {\r\n    conexion.query('SELECT * FROM tortillas WHERE Activa = 1', (err, rows, fields) => {\r\n        if(!err){\r\n            res.json(rows);\r\n        }else{\r\n            console.log(err);\r\n        }\r\n    });\r\n});\r\n\r\n//Ruta de llamado de Pedidos\r\nrouter.get('/Pedidos', async (req, res) => {\r\n    conexion.query('SELECT p.IdPedido, p.Fecha, p.Cliente, C.Nombres, C.Apellidos, p.Tortilla, t.Descripcion, p.Cantidad FROM pedidos AS p INNER JOIN clientes AS c ON p.Cliente = c.IdCliente INNER JOIN tortillas as T ON p.Tortilla = t.IdTortilla WHERE p.Fecha = CURRENT_DATE  ORDER BY c.Nombres, C.Apellidos, p.Tortilla', (err, rows, fields) => {\r\n        if(!err){\r\n            res.json(rows);\r\n        }else{\r\n            console.log(err);\r\n        }\r\n    });\r\n});\r\n\r\n//Ruta de llamado de Ventas\r\nrouter.get('/Ventas', async (req, res) => {\r\n    conexion.query('SELECT IdVenta, Fecha, c.Nombres, c.Apellidos, c.Direccion, c.Nit, SubTotal, Total, Pago, Cambio FROM ventas AS v INNER JOIN clientes AS c ON v.Cliente = c.IdCliente ORDER BY c.Nombres,c.Apellidos', (err, rows, fields) => {\r\n        if(!err){\r\n            res.json(rows);\r\n        }else{\r\n            console.log(err);\r\n        }\r\n    });\r\n});\r\n\r\n//Ruta de llamado de Pedidos sin Registrar en Ventas\r\nrouter.get('/PedidosARegistrar', async (req, res) => {\r\n    conexion.query('SELECT p.IdPedido, p.Fecha, p.Cliente, C.Nombres, C.Apellidos, p.Tortilla, t.Descripcion, p.Cantidad, RVenta FROM pedidos AS p INNER JOIN clientes AS c ON p.Cliente = c.IdCliente INNER JOIN tortillas as T ON p.Tortilla = t.IdTortilla WHERE RVenta = 0  ORDER BY p.Fecha DESC, c.Nombres, C.Apellidos, p.Tortilla', (err, rows, fields) => {\r\n        if(!err){\r\n            res.json(rows);\r\n        }else{\r\n            console.log(err);\r\n        }\r\n    });\r\n})\r\n\r\n//RUTAS DE LLAMADO POR ID ----------------------------------------------------------------------------------------------------------------------------------------------\r\n//Ruta de llamado de Clientes por id\r\nrouter.get('/Clientes/:id', async (req, res) => {\r\n    const { id } = req.params;\r\n    conexion.query('SELECT * FROM clientes WHERE IdCliente = ?', [id], (err, rows, fields) => {\r\n        if(!err){\r\n            res.json(rows[0]);\r\n        }else{\r\n            console.log(err);\r\n        }\r\n    });\r\n});\r\n\r\n//Ruta de llamado de Tortillas por id\r\nrouter.get('/Tortillas/:id', async (req, res) => {\r\n    const { id } = req.params;\r\n    conexion.query('SELECT * FROM tortillas WHERE IdTortilla = ?', [id], (err, rows, fields) => {\r\n        if(!err){\r\n            res.json(rows);\r\n        }else{\r\n            console.log(err);\r\n        }\r\n    });\r\n});\r\n\r\n//Ruta de llamado de Pedido por fecha especifica\r\nrouter.get('/Pedidos/:fecha', async (req, res) => {\r\n    const { fecha } = req.params;\r\n    conexion.query('SELECT p.IdPedido, p.Fecha, p.Cliente, C.Nombres, C.Apellidos, p.Tortilla, t.Descripcion, p.Cantidad FROM pedidos AS p INNER JOIN clientes AS c ON p.Cliente = c.IdCliente INNER JOIN tortillas as T ON p.Tortilla = t.IdTortilla WHERE p.Fecha = ?  ORDER BY c.Nombres, C.Apellidos, p.Tortilla', [fecha], (err, rows, fields) => {\r\n        if(!err){\r\n            res.json(rows);\r\n        }else{\r\n            console.log(err);\r\n        }\r\n    });\r\n});\r\n\r\n//Ruta de llamado de Ventas por Fecha\r\nrouter.get('/Ventas/:fecha', async (req, res) => {\r\n    const { fecha } = req.params;\r\n    conexion.query('SELECT IdVenta, Fecha, c.Nombres, c.Apellidos, c.Direccion, c.Nit, SubTotal, Total, Pago, Cambio FROM ventas AS v INNER JOIN clientes AS c ON v.Cliente = c.IdCliente WHERE Fecha = ? ORDER BY c.Nombres, C.Apellidos', [fecha], (err, rows, fields) => {\r\n        if(!err){\r\n            res.json(rows);\r\n        }else{\r\n            console.log(err);\r\n        }\r\n    });\r\n});\r\n\r\n//Ruta de llamado de Ventas por Cliente\r\nrouter.get('/VentasDe/:Cliente', async (req, res) => {\r\n    const { Cliente } = req.params;\r\n    conexion.query('SELECT IdVenta, Fecha, c.Nombres, c.Apellidos, c.Direccion, c.Nit, SubTotal, Total, Pago, Cambio FROM ventas AS v INNER JOIN clientes AS c ON v.Cliente = c.IdCliente WHERE v.Cliente = ? ORDER BY v.Fecha', [Cliente], (err, rows, fields) => {\r\n        if(!err){\r\n            res.json(rows);\r\n        }else{\r\n            console.log(err);\r\n        }\r\n    });\r\n});\r\n\r\n//Ruta de llamado de Detalle por Factura\r\nrouter.get('/DetallesVentas/:factura', async (req, res) => {\r\n    const { factura } = req.params;\r\n    conexion.query('SELECT * FROM detalleventa WHERE Factura = ?', [factura], (err, rows, fields) => {\r\n        if(!err){\r\n            res.json(rows);\r\n        }else{\r\n            console.log(err);\r\n        }\r\n    });\r\n});\r\n\r\n//Ruta de llamado de Pedidos sin Registrar en Ventas\r\nrouter.get('/PedidosARegistrar/:Fecha', async (req, res) => {\r\n    const { Fecha } = req.params;\r\n    conexion.query('SELECT p.IdPedido, p.Fecha, p.Cliente, C.Nombres, C.Apellidos, p.Tortilla, t.Descripcion, p.Cantidad, RVenta FROM pedidos AS p INNER JOIN clientes AS c ON p.Cliente = c.IdCliente INNER JOIN tortillas as T ON p.Tortilla = t.IdTortilla WHERE RVenta = 0 AND p.Fecha = ?  ORDER BY c.Nombres, C.Apellidos, p.Tortilla', [Fecha] ,(err, rows, fields) => {\r\n        if(!err){\r\n            res.json(rows);\r\n        }else{\r\n            console.log(err);\r\n        }\r\n    });\r\n})\r\n\r\n//RUTAS DE CREACION GENERAL ----------------------------------------------------------------------------------------------------------------------------------------------\r\n//Ruta de Creacion de Clientes\r\nrouter.post('/Clientes', async (req, res) => {\r\n    const { Nombres, Apellidos, Direccion, Telefono, Nit, Adelanto, Debe, Observacion, Foto} = req.body;\r\n    const SetenciaSQL = 'INSERT INTO `clientes` (`IdCliente`, `Nombres`, `Apellidos`, `Direccion`, `Telefono`, `Nit`, `Adelanto`, `Debe`, `Observacion`, `Foto`, `FC`, `FE`, `Activo`) VALUES (NULL, ?, ?, ?, ?, ?, ?, ?, ?, ?, current_timestamp(), NULL, 1)';\r\n    conexion.query(SetenciaSQL,[Nombres, Apellidos, Direccion, Telefono, Nit, Adelanto, Debe, Observacion, Foto], (err, rows, fields) => {\r\n        if(!err){\r\n            res.json({Status: 'Cliente Registrado'});\r\n        }else{\r\n            console.log(err)\r\n        }\r\n    });\r\n});\r\n\r\n//Ruta de Creacion de Tortilla\r\nrouter.post('/Tortillas', async (req, res) => {\r\n    const { Descripcion, Precio, Foto} = req.body;\r\n    const SetenciaSQL = 'INSERT INTO `tortillas` (`IdTortilla`, `Descripcion`, `Precio`, `Foto`, `FC`, `FE`, `Activa`) VALUES (NULL, ?, ?, ?, current_timestamp(), NULL, 1)';\r\n    conexion.query(SetenciaSQL,[Descripcion, Precio, Foto], (err, rows, fields) => {\r\n        if(!err){\r\n            res.json({Status: 'Tortilla Registrada'});\r\n        }else{\r\n            console.log(err)\r\n        }\r\n    });\r\n});\r\n\r\n//Ruta de Creacion de Pedidos\r\nrouter.post('/Pedidos', async (req, res) => {\r\n    const { Fecha, Cliente, Tortilla, Cantidad} = req.body;\r\n    const SetenciaSQL = 'INSERT INTO `pedidos` (`IdPedido`, `Fecha`, `Cliente`, `Tortilla`, `Cantidad`, `RVenta`) VALUES (NULL, ?, ?, ?, ?, 0)';\r\n    conexion.query(SetenciaSQL,[Fecha, Cliente, Tortilla, Cantidad], (err, rows, fields) => {\r\n        if(!err){\r\n            res.json({Status: 'Pedido Registrado'});\r\n        }else{\r\n            console.log(err)\r\n        }\r\n    });\r\n});\r\n\r\n//Ruta de Creacion de Ventas\r\nrouter.post('/Ventas', async (req, res) => {\r\n    const { Cliente, SubTotal, Total, Pago, Cambio} = req.body;\r\n    const SetenciaSQL = 'INSERT INTO Ventas (`IdVenta`, `Fecha`, `Cliente`, `SubTotal`, `Total`, `Pago`, `Cambio`) VALUES (NULL, CURRENT_DATE(), ?, ?, ?, ?, ?)';\r\n    conexion.query(SetenciaSQL,[Cliente, SubTotal, Total, Pago, Cambio], (err, rows, fields) => {\r\n        if(!err){\r\n            res.json({Status: 'Venta Registrada'});\r\n        }else{\r\n            console.log(err)\r\n        }\r\n    });\r\n});\r\n\r\n//Ruta de Creacion de Detalles\r\nrouter.post('/DetallesVentas', async (req, res) => {\r\n    const { Factura, Descripcion, Cantidad, Precio, Total} = req.body;\r\n    const SetenciaSQL = 'INSERT INTO `detalleventa` (`IdDetalle`, `Factura`, `Descripcion`, `Cantidad`, `Precio`, `Total`) VALUES (NULL, ?, ?, ?, ?, ?)';\r\n    conexion.query(SetenciaSQL,[Factura, Descripcion, Cantidad, Precio, Total], (err, rows, fields) => {\r\n        if(!err){\r\n            res.json({Status: 'Detalle Registrado'});\r\n        }else{\r\n            console.log(err)\r\n        }\r\n    });\r\n});\r\n\r\n//RUTAS DE ACTUALIZACION GENERAL ----------------------------------------------------------------------------------------------------------------------------------------------\r\n//Ruta de Acutalizacion de Clientes\r\nrouter.put('/Clientes/:id', async (req, res) =>{\r\n    const { Nombres, Apellidos, Direccion, Telefono, Nit, Adelanto, Debe, Observacion, Foto, Activo} = req.body;\r\n    const { id } = req.params;\r\n    const SetenciaSQL = 'UPDATE `clientes` SET `Nombres` = ?, `Apellidos` = ?, `Direccion` = ?, `Telefono` = ?, `Nit` = ?, `Adelanto` = ?, `Debe` = ?, `Observacion` = ?, `Foto` = ?, `FE` = CURRENT_TIMESTAMP(), `Activo` = ? WHERE `IdCliente` = ?';\r\n    conexion.query(SetenciaSQL, [Nombres, Apellidos, Direccion, Telefono, Nit, Adelanto, Debe, Observacion, Foto, Activo, id], (err, rows, fields) => {\r\n        if(!err){\r\n            res.json({Status: \"Cliente Acutalizado\"});\r\n        }else{\r\n            console.log(err)\r\n        }\r\n    });\r\n});\r\n\r\n//Ruta de Acutalizacion de Tortillas\r\nrouter.put('/Tortillas/:id', async (req, res) =>{\r\n    const { Descripcion, Precio, Foto, Activo} = req.body;\r\n    const { id } = req.params;\r\n    const SetenciaSQL = 'UPDATE `tortillas` SET `Descripcion` = ?, `Precio` = ?, `Foto` = ?, `FE` = CURRENT_TIMESTAMP(), `Activa` = ? WHERE `IdTortilla` = ?';\r\n    conexion.query(SetenciaSQL, [Descripcion, Precio, Foto, Activo, id], (err, rows, fields) => {\r\n        if(!err){\r\n            res.json({Status: \"Tortilla Acutalizada\"});\r\n        }else{\r\n            console.log(err)\r\n        }\r\n    });\r\n});\r\n\r\n//Ruta de Acutalizacion de Pedido\r\nrouter.put('/Pedidos', async (req, res) =>{\r\n    const { Cantidad, Fecha, Cliente, Tortilla } = req.body;\r\n    const SetenciaSQL = 'UPDATE pedidos SET Cantidad = ? WHERE Fecha = ? AND Cliente = ? AND Tortilla = ?';\r\n    conexion.query(SetenciaSQL, [Cantidad, Fecha, Cliente, Tortilla], (err, rows, fields) => {\r\n        if(!err){\r\n            res.json({Status: \"Pedido Acutalizado\"});\r\n        }else{\r\n            console.log(err)\r\n        }\r\n    });\r\n});\r\n\r\n//Ruta de Acutalizacion de RVenta de Pedidos\r\nrouter.put('/PedidosRVenta', async (req, res) =>{\r\n    const { Fecha, Cliente, } = req.body;\r\n    const SetenciaSQL = 'UPDATE pedidos SET RVenta = 1 WHERE Fecha = ? AND Cliente = ?';\r\n    conexion.query(SetenciaSQL, [Fecha, Cliente], (err, rows, fields) => {\r\n        if(!err){\r\n            res.json({Status: \"Pedido Acutalizado\"});\r\n        }else{\r\n            console.log(err)\r\n        }\r\n    });\r\n});\r\n\r\n//RUTAS DE ELIMINACION ----------------------------------------------------------------------------------------------------------------------------------------------\r\n//Ruta de Borrado de Clientes\r\nrouter.delete('/Clientes/:id', async (req, res) => {\r\n    const { id } = req.params;\r\n    conexion.query('UPDATE `clientes` SET `Activo` = 0 WHERE `IdCliente` = ?', [id], (err, rows, fields) => {\r\n        if(!err){\r\n            res.json({Status: \"Cliente marcado como inactivo\"});\r\n        }else{\r\n            console.log(err)\r\n        }\r\n    });\r\n});\r\n\r\n//Ruta de Borrado de Tortillas\r\nrouter.delete('/Tortillas/:id', async (req, res) => {\r\n    const { id } = req.params;\r\n    conexion.query('UPDATE `tortillas` SET `Activa` = 0 WHERE `IdTortilla` = ?', [id], (err, rows, fields) => {\r\n        if(!err){\r\n            res.json({Status: \"Tortilla marcada como inactiva\"});\r\n        }else{\r\n            console.log(err)\r\n        }\r\n    });\r\n});\r\n\r\n//Ruta de Borrado de Pedidos\r\nrouter.delete('/Pedidos', async (req, res) => {\r\n    const { Cliente, Fecha} = req.body;\r\n    conexion.query('DELETE FROM pedidos WHERE Cliente = ? AND Fecha = ?', [Cliente, Fecha], (err, rows, fields) => {\r\n        if(!err){\r\n            res.json({Status: \"Pedido borrado\"});\r\n        }else{\r\n            console.log(err)\r\n        }\r\n    });\r\n});\r\n\r\nmodule.exports = router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1614836208632
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\donal\\\\Documents\\\\GitHub\\\\Api-Tortillas\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\donal\\\\Documents\\\\GitHub\\\\Api-Tortillas\",\"filename\":\"C:\\\\Users\\\\donal\\\\Documents\\\\GitHub\\\\Api-Tortillas\\\\src\\\\database.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\donal\\\\Documents\\\\GitHub\\\\Api-Tortillas\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.13": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\donal\\Documents\\GitHub\\Api-Tortillas\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\donal\\Documents\\GitHub\\Api-Tortillas",
      "filename": "C:\\Users\\donal\\Documents\\GitHub\\Api-Tortillas\\src\\database.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\donal\\Documents\\GitHub\\Api-Tortillas",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\donal\\Documents\\GitHub\\Api-Tortillas\\src\\database.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\donal\\Documents\\GitHub\\Api-Tortillas\\src\\database.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\donal\\Documents\\GitHub\\Api-Tortillas\\src\\",
        "sourceFileName": "database.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar mysql = require('mysql');\n\nvar conexionsql = mysql.createConnection({\n  host: 'localhost',\n  user: 'root',\n  password: '',\n  database: 'tortillasdeharina'\n});\nconexionsql.connect(function (err) {\n  if (err) {\n    console.log(err);\n    return;\n  } else {\n    console.log('Base de datos conectada');\n  }\n});\nmodule.exports = conexionsql;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhdGFiYXNlLmpzIl0sIm5hbWVzIjpbIm15c3FsIiwicmVxdWlyZSIsImNvbmV4aW9uc3FsIiwiY3JlYXRlQ29ubmVjdGlvbiIsImhvc3QiLCJ1c2VyIiwicGFzc3dvcmQiLCJkYXRhYmFzZSIsImNvbm5lY3QiLCJlcnIiLCJjb25zb2xlIiwibG9nIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxPQUFELENBQXJCOztBQUVBLElBQU1DLFdBQVcsR0FBSUYsS0FBSyxDQUFDRyxnQkFBTixDQUF1QjtBQUN4Q0MsRUFBQUEsSUFBSSxFQUFFLFdBRGtDO0FBRXhDQyxFQUFBQSxJQUFJLEVBQUUsTUFGa0M7QUFHeENDLEVBQUFBLFFBQVEsRUFBRSxFQUg4QjtBQUl4Q0MsRUFBQUEsUUFBUSxFQUFFO0FBSjhCLENBQXZCLENBQXJCO0FBT0FMLFdBQVcsQ0FBQ00sT0FBWixDQUFvQixVQUFVQyxHQUFWLEVBQWU7QUFDL0IsTUFBR0EsR0FBSCxFQUFPO0FBQ0hDLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRixHQUFaO0FBQ0E7QUFDSCxHQUhELE1BR0s7QUFDREMsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVkseUJBQVo7QUFDSDtBQUNKLENBUEQ7QUFTQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCWCxXQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGRvbmFsXFxEb2N1bWVudHNcXEdpdEh1YlxcQXBpLVRvcnRpbGxhc1xcc3JjXFwiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBteXNxbCA9IHJlcXVpcmUoJ215c3FsJyk7XHJcblxyXG5jb25zdCBjb25leGlvbnNxbCA9ICBteXNxbC5jcmVhdGVDb25uZWN0aW9uKHtcclxuICAgIGhvc3Q6ICdsb2NhbGhvc3QnLFxyXG4gICAgdXNlcjogJ3Jvb3QnLFxyXG4gICAgcGFzc3dvcmQ6ICcnLFxyXG4gICAgZGF0YWJhc2U6ICd0b3J0aWxsYXNkZWhhcmluYSdcclxufSk7XHJcblxyXG5jb25leGlvbnNxbC5jb25uZWN0KGZ1bmN0aW9uIChlcnIpIHtcclxuICAgIGlmKGVycil7XHJcbiAgICAgICAgY29uc29sZS5sb2coZXJyKTtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9ZWxzZXtcclxuICAgICAgICBjb25zb2xlLmxvZygnQmFzZSBkZSBkYXRvcyBjb25lY3RhZGEnKTtcclxuICAgIH1cclxufSk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGNvbmV4aW9uc3FsOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "database.js"
      ],
      "names": [
        "mysql",
        "require",
        "conexionsql",
        "createConnection",
        "host",
        "user",
        "password",
        "database",
        "connect",
        "err",
        "console",
        "log",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,IAAMC,WAAW,GAAIF,KAAK,CAACG,gBAAN,CAAuB;AACxCC,EAAAA,IAAI,EAAE,WADkC;AAExCC,EAAAA,IAAI,EAAE,MAFkC;AAGxCC,EAAAA,QAAQ,EAAE,EAH8B;AAIxCC,EAAAA,QAAQ,EAAE;AAJ8B,CAAvB,CAArB;AAOAL,WAAW,CAACM,OAAZ,CAAoB,UAAUC,GAAV,EAAe;AAC/B,MAAGA,GAAH,EAAO;AACHC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA;AACH,GAHD,MAGK;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACH;AACJ,CAPD;AASAC,MAAM,CAACC,OAAP,GAAiBX,WAAjB",
      "sourceRoot": "C:\\Users\\donal\\Documents\\GitHub\\Api-Tortillas\\src\\",
      "sourcesContent": [
        "const mysql = require('mysql');\r\n\r\nconst conexionsql =  mysql.createConnection({\r\n    host: 'localhost',\r\n    user: 'root',\r\n    password: '',\r\n    database: 'tortillasdeharina'\r\n});\r\n\r\nconexionsql.connect(function (err) {\r\n    if(err){\r\n        console.log(err);\r\n        return;\r\n    }else{\r\n        console.log('Base de datos conectada');\r\n    }\r\n});\r\n\r\nmodule.exports = conexionsql;"
      ]
    },
    "sourceType": "script",
    "mtime": 1612138338125
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\donal\\\\Documents\\\\GitHub\\\\Api-Tortillas\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\donal\\\\Documents\\\\GitHub\\\\Api-Tortillas\",\"filename\":\"C:\\\\Users\\\\donal\\\\Documents\\\\GitHub\\\\Api-Tortillas\\\\src\\\\storage.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\donal\\\\Documents\\\\GitHub\\\\Api-Tortillas\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.13": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\donal\\Documents\\GitHub\\Api-Tortillas\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\donal\\Documents\\GitHub\\Api-Tortillas",
      "filename": "C:\\Users\\donal\\Documents\\GitHub\\Api-Tortillas\\src\\storage.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\donal\\Documents\\GitHub\\Api-Tortillas",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\donal\\Documents\\GitHub\\Api-Tortillas\\src\\storage.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\donal\\Documents\\GitHub\\Api-Tortillas\\src\\storage.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\donal\\Documents\\GitHub\\Api-Tortillas\\src\\",
        "sourceFileName": "storage.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar multer = require('multer');\n\nvar storage = multer.diskStorage({\n  destination: function destination(req, file, cb) {\n    cb(null, './Uploads');\n  },\n  filename: function filename(req, file, cb) {\n    cb(null, file.fieldname + '-' + Date.now());\n  }\n});\nvar upload = multer({\n  storage: storage\n});\nmodule.exports = upload;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0b3JhZ2UuanMiXSwibmFtZXMiOlsibXVsdGVyIiwicmVxdWlyZSIsInN0b3JhZ2UiLCJkaXNrU3RvcmFnZSIsImRlc3RpbmF0aW9uIiwicmVxIiwiZmlsZSIsImNiIiwiZmlsZW5hbWUiLCJmaWVsZG5hbWUiLCJEYXRlIiwibm93IiwidXBsb2FkIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxNQUFNLEdBQUdDLE9BQU8sQ0FBQyxRQUFELENBQXRCOztBQUVBLElBQU1DLE9BQU8sR0FBR0YsTUFBTSxDQUFDRyxXQUFQLENBQW1CO0FBQy9CQyxFQUFBQSxXQUFXLEVBQUUscUJBQVVDLEdBQVYsRUFBZUMsSUFBZixFQUFxQkMsRUFBckIsRUFBeUI7QUFDbENBLElBQUFBLEVBQUUsQ0FBQyxJQUFELEVBQU8sV0FBUCxDQUFGO0FBQ0gsR0FIOEI7QUFJL0JDLEVBQUFBLFFBQVEsRUFBRSxrQkFBVUgsR0FBVixFQUFlQyxJQUFmLEVBQXFCQyxFQUFyQixFQUF5QjtBQUMvQkEsSUFBQUEsRUFBRSxDQUFDLElBQUQsRUFBT0QsSUFBSSxDQUFDRyxTQUFMLEdBQWlCLEdBQWpCLEdBQXVCQyxJQUFJLENBQUNDLEdBQUwsRUFBOUIsQ0FBRjtBQUNIO0FBTjhCLENBQW5CLENBQWhCO0FBU0EsSUFBTUMsTUFBTSxHQUFHWixNQUFNLENBQUM7QUFBRUUsRUFBQUEsT0FBTyxFQUFQQTtBQUFGLENBQUQsQ0FBckI7QUFFQVcsTUFBTSxDQUFDQyxPQUFQLEdBQWlCRixNQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGRvbmFsXFxEb2N1bWVudHNcXEdpdEh1YlxcQXBpLVRvcnRpbGxhc1xcc3JjXFwiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBtdWx0ZXIgPSByZXF1aXJlKCdtdWx0ZXInKVxyXG5cclxuY29uc3Qgc3RvcmFnZSA9IG11bHRlci5kaXNrU3RvcmFnZSh7XHJcbiAgICBkZXN0aW5hdGlvbjogZnVuY3Rpb24gKHJlcSwgZmlsZSwgY2IpIHtcclxuICAgICAgICBjYihudWxsLCAnLi9VcGxvYWRzJylcclxuICAgIH0sXHJcbiAgICBmaWxlbmFtZTogZnVuY3Rpb24gKHJlcSwgZmlsZSwgY2IpIHtcclxuICAgICAgICBjYihudWxsLCBmaWxlLmZpZWxkbmFtZSArICctJyArIERhdGUubm93KCkpXHJcbiAgICB9XHJcbn0pXHJcbiAgIFxyXG5jb25zdCB1cGxvYWQgPSBtdWx0ZXIoeyBzdG9yYWdlIH0pXHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHVwbG9hZCJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "storage.js"
      ],
      "names": [
        "multer",
        "require",
        "storage",
        "diskStorage",
        "destination",
        "req",
        "file",
        "cb",
        "filename",
        "fieldname",
        "Date",
        "now",
        "upload",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AAEA,IAAMC,OAAO,GAAGF,MAAM,CAACG,WAAP,CAAmB;AAC/BC,EAAAA,WAAW,EAAE,qBAAUC,GAAV,EAAeC,IAAf,EAAqBC,EAArB,EAAyB;AAClCA,IAAAA,EAAE,CAAC,IAAD,EAAO,WAAP,CAAF;AACH,GAH8B;AAI/BC,EAAAA,QAAQ,EAAE,kBAAUH,GAAV,EAAeC,IAAf,EAAqBC,EAArB,EAAyB;AAC/BA,IAAAA,EAAE,CAAC,IAAD,EAAOD,IAAI,CAACG,SAAL,GAAiB,GAAjB,GAAuBC,IAAI,CAACC,GAAL,EAA9B,CAAF;AACH;AAN8B,CAAnB,CAAhB;AASA,IAAMC,MAAM,GAAGZ,MAAM,CAAC;AAAEE,EAAAA,OAAO,EAAPA;AAAF,CAAD,CAArB;AAEAW,MAAM,CAACC,OAAP,GAAiBF,MAAjB",
      "sourceRoot": "C:\\Users\\donal\\Documents\\GitHub\\Api-Tortillas\\src\\",
      "sourcesContent": [
        "const multer = require('multer')\r\n\r\nconst storage = multer.diskStorage({\r\n    destination: function (req, file, cb) {\r\n        cb(null, './Uploads')\r\n    },\r\n    filename: function (req, file, cb) {\r\n        cb(null, file.fieldname + '-' + Date.now())\r\n    }\r\n})\r\n   \r\nconst upload = multer({ storage })\r\n\r\nmodule.exports = upload"
      ]
    },
    "sourceType": "script",
    "mtime": 1612830029460
  }
}